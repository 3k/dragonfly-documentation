## Network Inspector ##

The Network Inspector is the HTTP dashboard of Opera Dragonfly. An overview of all HTTP requests (images, scripts, style, etc.) initiated by the primary Web page (primary HTTP request) is provided along a visualization of when and how long resources have been downloaded. You will get a better understanding on the order of downloads when you need to work out issues with script order or usability performances. 

### Network log

The first tab of the Network Inspector is called **Network log**. 

![Network Network Log](img/network-network-log.png)

In the left column, every URI is preceded with an icon giving a visual cue on the resource type (the format of its content). 

<table style="width:15em;">
<caption>Table of filetype and their icons</caption>
<tr>
    <th>icon</th>
    <th>file type</th>
</tr>
<tr>
    <td><img src="img/filetype_html.png" alt="html icon"/></td>
    <td>html</td>
</tr>
<tr>
    <td><img src="img/filetype_image.png" alt="image icon"/></td>
    <td>image</td>
</tr>
<tr>
    <td><img src="img/filetype_stylesheet.png" alt="stylesheet icon"/></td>
    <td>stylesheet</td>
</tr>
<tr>
    <td><img src="img/filetype_javascript.png" alt="javascript icon"/></td>
    <td>javascript</td>
</tr>
<tr>
    <td><img src="img/filetype_unknown.png" alt="unknown icon"/></td>
    <td>unknown</td>
</tr>
<tr>
    <td><img src="img/filetype_flash.png" alt="flash icon"/></td>
    <td>flash</td>
</tr>
</table>

Some of these URIs will be followed by a two arrows icon. It means that the resource has been loaded from the browser cache instead of the network.

The right column is a long panel with vertical lines. Each line marks 100 milliseconds. Thicker vertical black lines mark 1 second. For each resource line, a colored horizontal bar is displayed composed of three events:

* the start time when the URI is loaded, 
* the [request time](https://bitbucket.org/scope/dragonfly-stp-1/src/197e88952ad3/src/network/network_service.js#cl-316) (left end of the colored bar)
* the end time when the request has been completed. (right end of the colored bar)

![Network Network Log Bar](img/network-network-log-bar.png)

Putting the mouse over the horizontal bar will reveal three values in a box for these events in milliseconds: [[Total duration]], [[Request time]] and [[Response time]]. When the information has been loaded from the cache, `Cached:` is displayed with the time in milliseconds.

@@processing order and cascade - what does it tell me?@@


### Make Request

The Make Request tab is a tool for creating a custom HTTP request to a specific URI and obtain the HTTP response with or without the payload. 

![Network Network Log Req](img/network-network-log-req.png)

Opera Dragonfly makes it easy to precisely tailor an HTTP request by specifying each individual HTTP headers. When entering the URI in the URL box, the HTTP request is being crafted in the Request body box. The default proposed HTTP method is GET (In the beta version of Opera Dragonfly, only the HTTP GET method is available). The default Opera HTTP headers are written in the Request body. They can be changed for testing Web servers with different type of HTTP requests. For example, it is possible to create an HTTP request that would enforce `application/xhtml+xml`.

    GET / HTTP/1.1
    Host: www.opera.com
    User-Agent: Opera/9.80 (Macintosh; Intel Mac OS X 10.6.6; U; fr) Presto/2.7.62 Version/11.01
    Accept: application/xhtml+xml

When clicking on the Send request button, the HTTP request is sent and in the Response box appears the answer of the server as communicated over the network.

* ISSUE: If we replace GET by HEAD for example, we do not get an answer back. We might want to authorize only GET or better to create a real HTTP client with more methods. To be discussed.
* ISSUE: There is a mistake in the Accept header, the plus signs are not displayed. For example, in application/xhtml+xml
* ISSUE: the Accept-Language header is specified to norwegian. nb-NO,nb;q=0.9,no-NO;q=0.8,no;q=0.7,en;q=0.6


### Network Options

The third panels provide options for fine tuning the browser behavior with regards to HTTP requests.

![Network Network Log Opt](img/network-network-log-opt.png)

#### Caching behaviour

When testing HTTP requests, it might be important to disable all sources of  browser (and network?@@) caching. When caching is disable, Opera will bypass all caching, always doing full reloads from the server.

#### Content tracking behaviour

This setting controls if the bodies of responses will be available to Dragonfly when a page loads. Enabling it will make load operations slower, and use more memory. It will also make network body reporting more accurate

@@more explanation needed@@

#### Global header overrides

It is sometimes necessary to impersonate another HTTP client such as a bot, a mobile browser, etc. It is already possible to do that through the Make request tab, but might be cumbersome in some circumstances to have to manually type these.  Once the *Enable global header overrides*  checkbox is selected, there are two choices: 

* select a predefined profile
* create a profile and save it

@@There are still a few issues around this option@@

### How to identify some basic HTTP issues with Make Request

(the dragonfly curl manual). Here take part of the articles written with common issues. and explain how to use the HTTP request dance to see the differences.

#### HTTP Client-Server dance

Explain a few basics of HTTP client-server dialog.

#### Content Negotiation On Language
#### Content Negotiation On Mime-Type
#### Identify User-Agent Sniffing
#### More exploration with HTTP


